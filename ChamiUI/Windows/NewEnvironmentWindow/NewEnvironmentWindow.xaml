<Window x:Class="ChamiUI.Windows.NewEnvironmentWindow.NewEnvironmentWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:ChamiUI.Windows.NewEnvironmentWindow"
        xmlns:vm="clr-namespace:ChamiUI.PresentationLayer"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        lex:ResxLocalizationProvider.DefaultAssembly="ChamiUI"
        lex:ResxLocalizationProvider.DefaultDictionary="ChamiUIStrings"
        xmlns:viewModels="clr-namespace:ChamiUI.PresentationLayer.ViewModels"
        xmlns:vr="clr-namespace:ChamiUI.BusinessLayer.Validators"
        d:DataContext="{d:DesignInstance viewModels:NewEnvironmentViewModel, IsDesignTimeCreatable=True}"
        mc:Ignorable="d"
        x:Name="ExportWindowTitle"
        Title="{lex:Loc}"
        Height="450"
        Width="300"
        ResizeMode="NoResize"
        Loaded="NewEnvironmentWindow_OnLoaded">
    <Window.Resources>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)/ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="errorStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="Padding" Value="-2" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self},
            Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Grid Margin="5, 5, 5, 5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Label Grid.Row="0"
               Grid.Column="0"
               Grid.ColumnSpan="2"
               HorizontalContentAlignment="Center"
               FontWeight="DemiBold"
               FontSize="20"
               x:Name="NewEnvironmentWindowHeaderTitle"
               Content="{lex:Loc}" />
        <Label Grid.Row="1"
               Grid.Column="0"
               x:Name="NewEnvironmentFormNameLabel"
               Content="{lex:Loc}" />
        <TextBox Grid.Row="1"
                 Grid.Column="1"
                 VerticalContentAlignment="Center"
                 TabIndex="0"
                 Style="{StaticResource textBoxInError}"
                 x:Name="EnvironmentNameTextbox">
            <TextBox.Text>
                <Binding Path="EnvironmentName" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <vr:EnvironmentNameValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <DataGrid Grid.Row="2"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  AutoGenerateColumns="False"
                  ItemsSource="{Binding Environment.EnvironmentVariables}"

                  RowStyle="{StaticResource errorStyle}">
            <DataGrid.RowValidationRules>
                <vr:EnvironmentVariableNameNotNullValidationRule ValidationStep="UpdatedValue" />
                <vr:EnvironmentVariableNameValidCharactersValidationRule ValidationStep="UpdatedValue" />
                <vr:EnvironmentVariableNameLengthValidationRule MaxLength="2047" ValidationStep="UpdatedValue" />
                <vr:EnvironmentVariableNameNoNumberFirstCharacterValidationRule ValidationStep="UpdatedValue"/>
            </DataGrid.RowValidationRules>

            <DataGrid.Columns>
                <DataGridTextColumn Width="100"
                                    x:Name="NewEnvironmentDataGridNameColumn"
                                    Header="{lex:Loc Key=NewEnvironmentDataGridNameColumn}"
                                    Binding="{Binding Name, ValidatesOnExceptions=True}" />
                <DataGridTextColumn Width="150"
                                    x:Name="NewEnvironmentDataGridValueColumn"
                                    Header="{lex:Loc Key=NewEnvironmentDataGridValueColumn}"
                                    Binding="{Binding Value}" />
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Grid.Row="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal"
                    Margin="5, 0, 5, 0">
            <Button Content="{lex:Loc}"
                    x:Name="NewEnvironmentWindowSaveButton"
                    IsEnabled="{Binding IsSaveButtonEnabled}"
                    Click="SaveButton_OnClick"
                    Margin="5, 5,5,5" />
            <Button Content="{lex:Loc}"
                    x:Name="NewEnvironmentWindowCancelButton"
                    Click="CancelButton_OnClick"
                    Margin="5, 5,5,5" />
        </StackPanel>
    </Grid>
</Window>
<Window x:Class="ChamiUI.Windows.MainWindow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ChamiUI"
        xmlns:vm="clr-namespace:ChamiUI.PresentationLayer"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel, IsDesignTimeCreatable=True}"
        mc:Ignorable="d"
        xmlns:svg="http://sharpvectors.codeplex.com/svgc/"
        xmlns:viewModels="clr-namespace:ChamiUI.PresentationLayer.ViewModels"
        xmlns:mainWindow="clr-namespace:ChamiUI.Windows.MainWindow"
        xmlns:commandProvider="clr-namespace:ChamiUI.PresentationLayer.Commands"
        Title="{Binding WindowTitle}" 
        Loaded="MainWindow_OnLoaded"
        Height="450" Width="800">
    <Window.InputBindings>
        <KeyBinding 
            Key="Escape" 
            Command="{x:Static commandProvider:CancelEditingCommandProvider.CancelEditingCommand}"
                
        ></KeyBinding>
    </Window.InputBindings>
    <Window.Resources>
        <CollectionViewSource x:Key="EnvironmentVariablesViewSource" Source="{Binding SelectedEnvironment.EnvironmentVariables}"></CollectionViewSource>
        <ContextMenu x:Key="EnvironmentListBoxContextMenu">
            <MenuItem Header="Edit" x:Name="EditEnvironmentMenuItem" Click="EditEnvironmentMenuItem_OnClick">
                <MenuItem.Icon>
                    <svg:SvgViewbox Source="/ChamiUI;component/Assets/Svg/edit.svg"></svg:SvgViewbox>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Delete" x:Name="DeleteEnvironmentMenuItem" Click="DeleteEnvironmentMenuItem_OnClick">
                <MenuItem.Icon>
                    <svg:SvgViewbox Source="/ChamiUI;component/Assets/Svg/times.svg" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        
        <ContextMenu x:Key="EnvironmentVariablesContextMenu">
            <MenuItem Header="Copy" 
                      x:Name="CopyEnvironmentVariableMenuItem" 
                      Click="CopyEnvironmentVariableMenuItem_OnClick">
                <MenuItem.Icon>
                    <svg:SvgViewbox Source="/ChamiUI;component/Assets/Svg/copy.svg"></svg:SvgViewbox>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Delete" 
                      x:Name="DeleteEnvironmentVariableMenuItem" 
                      Click="DeleteEnvironmentVariableMenuItem_OnClick">
                <MenuItem.Icon>
                    <svg:SvgViewbox Source="/ChamiUI;component/Assets/Svg/times.svg"></svg:SvgViewbox>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding x:Name="SaveCommandBinding" 
                        Command="Save" 
                        CanExecute="SaveCommandBinding_OnCanExecute" 
                        Executed="SaveCommandBinding_OnExecuted"></CommandBinding>
        <CommandBinding x:Name="NewEnvironmentCommandBinding"
                        Command="New"
                        CanExecute="NewEnvironmentCommandBinding_CanExecute"
                        Executed="NewEnvironmentCommandBinding_Executed"></CommandBinding>
        <CommandBinding x:Name="UndoEditing" 
                        Command="{x:Static commandProvider:CancelEditingCommandProvider.CancelEditingCommand}"
                        CanExecute="UndoEditing_OnCanExecute"
                        Executed="UndoEditing_OnExecuted"
                        ></CommandBinding>
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="3*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Menu Grid.Row="0" Grid.Column="0">
            <MenuItem Header="File">
                <MenuItem Header="New Environment" x:Name="NewEnvironmentMenuItem"
                          Command="New" />
                <MenuItem Header="Save" x:Name="SaveEnvironmentMenuItem" Command="Save"></MenuItem>
                <MenuItem Header="Import">
                    <MenuItem Header="From .env..." x:Name="ImportFromDotenvMenuItem" Click="ImportFromDotenvMenuItem_OnClick"/>
                    <MenuItem Header="From JSON..." x:Name="ImportFromJsonMenuItem" Click="ImportFromJsonMenuItem_OnClick" />
                </MenuItem>
                <MenuItem Header="Export..." x:Name="ExportMenuItem" Click="ExportMenuItem_Click" />
                <Separator />
                <MenuItem Header="Quit"
                          x:Name="QuitApplicationMenuItem"
                          Click="QuitApplicationMenuItem_OnClick" />
            </MenuItem>
            <MenuItem Header="Options">
                <MenuItem Header="Reset environment variables" x:Name="ResetVarsMenuItem" Click="ResetVarsMenuItem_OnClick"></MenuItem>
                <MenuItem Header="Backup current environment" x:Name="BackupEnvironmentMenuItem" Click="BackupEnvironmentMenuItem_OnClick"></MenuItem>
                <Separator/>
                <MenuItem Header="Settings" x:Name="SettingsMenuItem" Click="SettingsMenuItem_OnClick">
                    <MenuItem.Icon>
                        <svg:SvgViewbox Source="/ChamiUI;component/Assets/Svg/cog.svg"></svg:SvgViewbox>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="?">
                <MenuItem Header="About Chami..." x:Name="AboutMenuItem" Click="AboutMenuItem_OnClick" />
                <Separator />
                <MenuItem Header="Website" x:Name="WebsiteMenuItem" Click="WebsiteMenuItem_Click" />
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1"
              Grid.Column="0"
              Margin="5, 0, 5, 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ListBox Grid.Column="0"
                     Margin="5,5,5,5"
                     ItemsSource="{Binding Environments}"
                     x:Name="EnvironmentsListbox"
                     SelectedItem="{Binding SelectedEnvironment}"
                     SelectionChanged="EnvironmentsListbox_OnSelectionChanged"
                     MouseDoubleClick="EnvironmentsListbox_OnMouseDoubleClick"
                     >
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="ContextMenu" Value="{StaticResource EnvironmentListBoxContextMenu}" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Label Content="{Binding DisplayName}" 
                               FontWeight="{Binding TextFontWeight}"
                               MouseDoubleClick="ApplyEnvironmentButton_OnClick"
                               Width="{Binding Width, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
                               >
                        </Label>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <Button Grid.Column="1"
                    ToolTip="Apply"
                    MaxWidth="22"
                    MaxHeight="22"
                    x:Name="ApplyEnvironmentButton"
                    Click="ApplyEnvironmentButton_OnClick"
                    IsEnabled="{Binding ExecuteButtonEnabled}"
                    >
                <svg:SvgViewbox MaxWidth="16"
                                MaxHeight="16"
                                Source="{Binding ExecuteButtonIcon}" 
                                IsEnabled="{Binding ExecuteButtonEnabled}" 
                                
                                />
            </Button>
        </Grid>
        <TabControl Grid.Row="2"
                    Grid.Column="0"
                    x:Name="TabControls">
            <TabItem Header="Variables">
                <DataGrid ItemsSource="{Binding Source={StaticResource EnvironmentVariablesViewSource}}"
                          AutoGenerateColumns="False"
                          CanUserAddRows="{Binding EditingEnabled}"
                          CanUserDeleteRows="{Binding EditingEnabled}"
                          IsEnabled="{Binding EditingEnabled}"
                          SelectedItem="{Binding SelectedVariable}"
                          PreviewKeyDown="CurrentEnvironmentVariablesDataGrid_OnPreviewKeyDown"
                          x:Name="CurrentEnvironmentVariablesDataGrid"
                          >
                    <DataGrid.ItemContainerStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="ContextMenu" Value="{StaticResource EnvironmentVariablesContextMenu}" />
                        </Style>
                    </DataGrid.ItemContainerStyle>
                    <DataGrid.Columns>
                        
                        <DataGridTextColumn Width="65"
                                            Binding="{Binding Name}"
                                            Header="Name" />
                        <DataGridTextColumn Header="Value"
                                            Binding="{Binding Value}" />
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Console">
                <TextBox x:Name="ConsoleTextBox"
                         Background="{Binding Settings.ConsoleAppearanceSettings.BackgroundColor}"
                         Foreground="{Binding Settings.ConsoleAppearanceSettings.ForegroundColor}"
                         FontFamily="{Binding Settings.ConsoleAppearanceSettings.FontFamily}"
                         FontSize="{Binding Settings.ConsoleAppearanceSettings.FontSize}"
                         HorizontalScrollBarVisibility="Auto"
                         VerticalScrollBarVisibility="Visible"
                         IsReadOnly="True"
                />
            </TabItem>
        </TabControl>
    </Grid>
</Window>
